name: Setup Remote Desktop

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Download Ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Extract Ngrok
        run: |
          Expand-Archive -Path ngrok.zip -DestinationPath .

      - name: Auth Ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

      - name: Enable TS
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

      - name: Enable Firewall Rule for Remote Desktop
        run: |
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Enable User Authentication for RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      - name: Check if User Exists
        id: check_user
        shell: pwsh
        run: |
          $user = Get-LocalUser -Name "prophong024" -ErrorAction SilentlyContinue
          if ($null -eq $user) { echo "::set-output name=exists::false" } else { echo "::set-output name=exists::true" }

      - name: Create User if Not Exists
        if: steps.check_user.outputs.exists == 'false'
        shell: pwsh
        run: |
          New-LocalUser -Name "prophong024" -Password (ConvertTo-SecureString -AsPlainText "123456abcZ" -Force) -FullName "Prophong024" -Description "A local user account"

      - name: Set Password for User
        shell: pwsh
        run: |
          try {
              Set-LocalUser -Name "prophong024" -Password (ConvertTo-SecureString -AsPlainText "123456abcZ" -Force)
          } catch {
              Write-Error "An error occurred: $_"
          }

      - name: Create Tunnel
        run: |
          .\ngrok.exe tcp 3389 --region ap
